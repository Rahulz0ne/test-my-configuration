apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'




buildscript {
    ext {
        springBootVersion = '2.7.3'
        springGradleDMVersion = '1.0.13.RELEASE'
        springCloudVersion = '2021.0.3'

        springBootAdminVersion = '2.7.3'
        metricsVersion = "4.1.3"
    }

/*buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        springCloudVersion = 'Hoxton.SR5'

        springBootAdminVersion = '2.3.0'
        springDependencyManagementPluginVersion = "1.0.9.RELEASE"

        metricsVersion = "4.1.3"
    }*/


    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.13.RELEASE")

        classpath("com.kenshoo:gradle-fpm:0.5")
    }
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


//To set the build specific properties from gradle. 


configurations {
    providedRuntime
    all*.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

/*dependencyManagement {
     imports {
         mavenBom("org.springframework.cloud:spring-cloud-dependencies:" + springCloudVersion)
         mavenBom("org.springframework.boot:spring-boot-dependencies:" + springBootVersion)
     }
}*/

dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation("de.codecentric:spring-boot-admin-server:${springBootAdminVersion}")
    implementation("de.codecentric:spring-boot-admin-server-ui:${springBootAdminVersion}")
    //implementation group: 'de.codecentric', name: 'spring-boot-admin-server', version: '2.7.3'
    //implementation group: 'de.codecentric', name: 'spring-boot-admin-server-ui', version: '2.7.3'



    implementation("com.netflix.turbine:turbine-core:1.0.0")
    implementation("com.netflix.turbine:turbine-contrib:1.4.16")
  //implementation("com.netflix.turbine:turbine-web:1.0.0")
   implementation("com.netflix.turbine:turbine-web:1.0.0") {exclude group:'log4j', module: 'log4j', version:'1.2.17'}
//  implementation("de.codecentric:spring-boot-admin-starter-server:${springBootAdminVersion}")
    implementation("com.google.code.gson:gson:2.8.6")
    implementation("com.googlecode.json-simple:json-simple:1.1.1")

//    implementation("org.springframework.cloud:spring-cloud-starter-netflix-turbine:2.2.4.RELEASE")

    implementation("io.dropwizard.metrics:metrics-jvm:${metricsVersion}")
    implementation("io.dropwizard.metrics:metrics-graphite:${metricsVersion}")
    implementation("io.dropwizard.metrics:metrics-core:${metricsVersion}")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}





